# simple map in R
library(sp) # spacial dataframe objects
library(tmap) # easy mapping
# read in shapefile
hsa_sp <- rgdal::readOGR(dsn = "hsa_bdry", layer = "HSA_BDRY", stringsAsFactors = F)
# examine structure
str(hsa_sp, max.level = 2)
str(hsa_sp@data)
# subset spdf to Maine
me_flg <- substr(hsa_sp$HSANAME, 1, 2) == "ME"
table(me_flg)
head(hsa_sp)
hsa_sp <- hsa_sp[me_flg, ]
head(hsa_sp@data)
# create hsacity variable to merge on
hsa_sp$hsaname <- tolower(substring(hsa_sp$HSANAME, first = 5))
hsa_sp$hsanum <- hsa_sp$HSA93
# check result
hsa_sp$hsanum
# need to assign proj 4 string
proj4string(hsa_sp)
# simple map in R
library(sp) # spacial dataframe objects
install.packages("sp")
library(tmap) # easy mapping
install.packages("tmap")
# simple map in R
library(sp) # spacial dataframe objects
library(tmap) # easy mapping
# read in shapefile downloaded from dartmoth atlas website
hsa_sp <- rgdal::readOGR(dsn = "hsa_bdry", layer = "HSA_BDRY", stringsAsFactors = F)
# read in shapefile downloaded from dartmoth atlas website
hsa_sp <- rgdal::readOGR(dsn = "hsa_bdry", layer = "HSA_BDRY", stringsAsFactors = F)
# read in shapefile downloaded from dartmoth atlas website
hsa_sp <- rgdal::readOGR(dsn = "hsa_bdry", layer = "hsa_bdry", stringsAsFactors = F)
# simple map in R
library(sp) # spacial dataframe objects
library(tmap) # easy mapping
# read in shapefile downloaded from dartmoth atlas website
hsa_sp <- rgdal::readOGR(dsn = "hsa_bdry", layer = "HSA_BDRY", stringsAsFactors = F)
# examine structure
str(hsa_sp, max.level = 2)
str(hsa_sp@data)
# subset spdf to Maine
me_flg <- substr(hsa_sp$HSANAME, 1, 2) == "ME"
table(me_flg)
hsa_sp <- hsa_sp[me_flg, ]
head(hsa_sp)
head(hsa_sp@data)
# create hsacity variable to merge on
hsa_sp$hsaname <- tolower(substring(hsa_sp$HSANAME, first = 5))
hsa_sp$hsanum <- hsa_sp$HSA93
# check result
hsa_sp$hsanum
# need to assign proj 4 string
proj4string(hsa_sp)
library(tigris)
install.packages("tigris")
library(tigris)
# Call tracts(): nyc_tracts
me_tracts <- tracts(state = "ME", cb = TRUE)
me_cntys <- counties(state = "ME", cb = T)
state_bndry <- states(cb = T)
str(state_bndry@data, max.level = 2)
me_bndry <- state_bndry[state_bndry$STUSPS == "ME", ]
# fix coordinate ref system
proj4string(me_bndry)
# should be NAD83
proj4string(hsa_sp) <- proj4string(me_bndry)
hsa_sp <- merge(hsa_sp, bfs, by = "hsanum")
names(hsa_sp@data)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# now we have our data and are ready to map!
plot(hsa_sp)
plot(me_bndry, add = T)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# now we have our data and are ready to map!
plot(hsa_sp)
plot(me_bndry, add = T)
plot(me_cntys)
me_zctas <- zctas(state = "ME", cb = T)
# read in shapefile downloaded from dartmoth atlas website
hsa_sp <- rgdal::readOGR(dsn = "hsa_bdry", layer = "HSA_BDRY", stringsAsFactors = F)
# examine structure
str(hsa_sp, max.level = 2)
str(hsa_sp@data)
# subset spdf to Maine
me_flg <- substr(hsa_sp$HSANAME, 1, 2) == "ME"
table(me_flg)
hsa_sp <- hsa_sp[me_flg, ]
head(hsa_sp)
head(hsa_sp@data)
# create hsacity variable to merge on
hsa_sp$hsaname <- tolower(substring(hsa_sp$HSANAME, first = 5))
hsa_sp$hsanum <- hsa_sp$HSA93
# check result
hsa_sp$hsanum
# need to assign proj 4 string
proj4string(hsa_sp)
state_bndry <- states(cb = T)
str(state_bndry@data, max.level = 2)
me_bndry <- state_bndry[state_bndry$STUSPS == "ME", ]
# fix coordinate ref system
proj4string(me_bndry)
# should be NAD83
proj4string(hsa_sp) <- proj4string(me_bndry)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Merge in data
me_hsa <- hsa_sp
hsa_sp <- merge(hsa_sp, bfs, by = "hsanum")
names(hsa_sp@data)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# now we have our data and are ready to map!
plot(hsa_sp)
plot(me_bndry, add = T)
# save map objects
library(readr)
purrr::walk2(list(me_tracts, me_cntys, me_hsa, me_zctas),
list("me_tracts", "me_cntys", "me_hsa", "me_zctas"),
readr::write_rds(.x, paste0("./data/", .y, ".rds")))
purrr::walk2(list(me_tracts, me_cntys, me_hsa, me_zctas),
list("me_tracts", "me_cntys", "me_hsa", "me_zctas"),
~readr::write_rds(.x, paste0("./data/", .y, ".rds")))
devtools::use_data(me_tracts, me_cntys, me_hsa, me_zctas, me_bndry)
devtools::use_data(me_tracts, me_cntys, me_hsa, me_zctas, me_bndry)
names(me_hsa@data)
hsa <- me_hsa
hsa$labels <- Map(function(.) ifelse(. == "Boothbay Harbor", "Boothbay \n Harbor",
ifelse(. == "Biddeford", "      Biddeford",
ifelse(. == "Sanford", "Sanford      ", .))),
spdf$hsacity) %>% unlist(use.name = F)
hsa$labels <- Map(function(.) ifelse(. == "Boothbay Harbor", "Boothbay \n Harbor",
ifelse(. == "Biddeford", "      Biddeford",
ifelse(. == "Sanford", "Sanford      ", .))),
me_hsa$hsacity) %>% unlist(use.name = F)
hsa$labels <- Map(function(.) ifelse(. == "Boothbay Harbor", "Boothbay \n Harbor",
ifelse(. == "Biddeford", "      Biddeford",
ifelse(. == "Sanford", "Sanford      ", .))),
hsa$hsacity) %>% unlist(use.name = F)
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0) +
tm_shape(me_hsa) +
tm_fill(col = "grey60") +
tm_borders(col = "grey10", lwd = 1) +
tm_text(text = "label", size = 0.6, col = "white") +
tm_layout(bg.color = "grey10")
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0) +
tm_shape(me_hsa)
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0)
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0)
tm_shape(me_bndry) +
tm_fill(col = "grey30")
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0)
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0) +
tm_shape(me_hsa) +
tm_fill(col = "grey60") +
tm_borders(col = "grey10", lwd = 1)
hsa$label <- Map(function(.) ifelse(. == "Boothbay Harbor", "Boothbay \n Harbor",
ifelse(. == "Biddeford", "      Biddeford",
ifelse(. == "Sanford", "Sanford      ", .))),
hsa$hsacity) %>% unlist(use.name = F)
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0) +
tm_shape(me_hsa) +
tm_fill(col = "grey60") +
tm_borders(col = "grey10", lwd = 1) +
tm_text(text = "label", size = 0.6, col = "white") +
tm_layout(bg.color = "grey10")
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0) +
tm_shape(hsa) +
tm_fill(col = "grey60") +
tm_borders(col = "grey10", lwd = 1) +
tm_text(text = "label", size = 0.6, col = "white") +
tm_layout(bg.color = "grey10")
hsa$label
hsa <- me_hsa
hsa$label <- Map(function(.) ifelse(. == "Boothbay Harbor", "Boothbay \n Harbor",
ifelse(. == "Biddeford", "      Biddeford",
ifelse(. == "Sanford", "Sanford      ", .))),
hsa$hsacity) %>% unlist(use.name = F)
hsa$label
hsa$hsacity
names(me_hsa@data)
hsa$hsaname
hsa$HSANAME
hsa$hsaname
me_hsa$hsaname <-  tools::toTitleCase(hsa$hsaname)
hsa$hsaname
hsa <- me_hsa
hsa$hsaname
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0) +
tm_shape(hsa) +
tm_fill(col = "grey60") +
tm_borders(col = "grey10", lwd = 1) +
tm_text(text = "hsaname", size = 0.6, col = "white") +
tm_layout(bg.color = "grey10")
save_tmap(filename = ".dev/maps/HSA key.png")
tmap_save(filename = ".dev/maps/HSA key.png")
tmap_save(filename = "./dev/maps/HSA key.png")
install.packages("datapasta")
maine_hsa_key_map <- function(){
require(tmap)
hsa <- me_hsa
# hsa$label <- Map(function(.) ifelse(. == "Boothbay Harbor", "Boothbay \n Harbor",
#                               ifelse(. == "Biddeford", "      Biddeford",
#                               ifelse(. == "Sanford", "Sanford      ", .))),
#                   hsa$hsaname) %>% unlist(use.name = F)
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0) +
tm_shape(hsa) +
tm_fill(col = "grey60") +
tm_borders(col = "grey10", lwd = 1) +
tm_text(text = "hsaname", size = 0.6, col = "white") +
tm_layout(bg.color = "grey10")
}
maine_hsa_key_map()
maine_hsa_key_map <- function(){
require(tmap)
hsa <- me_hsa
hsa$hsaname <- Map(function(.) ifelse(. == "Boothbay Harbor", "Boothbay \n Harbor",
ifelse(. == "Biddeford", "      Biddeford",
ifelse(. == "Sanford", "Sanford      ", .))),
hsa$hsaname) %>% unlist(use.name = F)
tm_shape(me_bndry) +
tm_fill(col = "grey30") +
tm_borders(col = "grey10", lwd = 0) +
tm_shape(hsa) +
tm_fill(col = "grey60") +
tm_borders(col = "grey10", lwd = 1) +
tm_text(text = "hsaname", size = 0.6, col = "white") +
tm_layout(bg.color = "grey10")
}
maine_hsa_key_map()
me_hsa@data
me_cntys@data %>% names
me_cntys@data %>% head
